{"version":3,"sources":["../js/index.ts"],"names":[],"mappings":";AAAA,IAAI,EAAgB,CACnB,UAAU,EACV,OAAQ,CAAC,GAAI,GAAI,IACjB,YAAa,KACb,MAAO,GAGR,SAAS,IACK,SAAS,iBAAiB,UAEhC,QAAQ,SAAA,GACd,EAAM,iBAAiB,QAAS,KAGf,SAAS,eAAe,gBAE9B,iBAAiB,QAAS,SAAC,GACtC,EAAE,iBAEI,IAAA,EAA2B,SAAS,eAAe,cACvD,MACI,EAAY,SAAS,EAAO,IAE9B,GAAa,GAAK,GAAa,IAClC,EAAS,UAAY,EACrB,EAAU,MAKb,SAAS,EAAa,EAA0B,GAC3C,IAAA,EAAW,EAAK,GAEhB,QAAA,EAAG,OAAS,IAEX,EAAG,GAAG,QAAQ,KAAO,EAAS,QAAQ,KAY5C,SAAS,IACY,SAAS,cAC5B,gBAAgB,EAAS,YAAW,MAEzB,UAAU,OAAO,UAC7B,EAAS,YAAc,KAGxB,SAAS,EAAe,GACH,SAAS,cAAc,gBAAgB,EAAK,MACpD,UAAU,IAAI,UAC1B,EAAS,YAAc,EAGxB,SAAS,EAAY,GAEhB,IAAA,EAAe,EAAE,cAAc,QAAQ,MAGvC,GAAA,EAAS,cAAgB,EAAzB,CAMC,GAA6B,OAAzB,EAAS,YACjB,EAAS,YAAc,EACvB,EAAe,OAIX,CACA,IAAA,EAAO,EAAS,OAAO,EAAS,aAIhC,GAAA,EAAa,EAHR,EAAS,OAAO,IAGG,CAEvB,IAAA,EAAO,EAAK,QAChB,EAAS,OAAO,GAAc,QAAQ,GACtC,IAEA,EAAS,OAAS,EAElB,SAEA,IAIE,KACH,SA/BA,IAoCF,SAAS,IACJ,IAAA,EAAe,SAAS,cAAc,kBACtC,EAAQ,SAAS,eAAe,cAEpC,EAAa,UAAU,OAAO,UAC9B,EAAM,UAAY,EAAS,MAG5B,SAAS,IAC0B,SAAS,cAAc,oBAC1C,MAAM,QAAU,OAGhC,SAAS,IACJ,IAAA,EAAK,EAAS,OAAO,GAErB,GAAA,EAAG,OAAS,GAAK,EAAG,SAAW,EAAS,UACpC,OAAA,EAIT,SAAS,IACJ,IAAA,EAAS,SAAS,iBAAiB,UAEvC,EAAS,OAAO,QAAQ,SAAC,EAAW,GAC/B,IAAA,EAAgB,EAAO,GAAI,cAAc,mBAC7C,EAAc,UAAY,GAC1B,EAAU,QAAQ,SAAC,EAAG,GACrB,EAAc,YAAY,OAK7B,SAAS,IACI,SAAS,cAAc,eAC7B,UAAU,IAAI,UAGrB,SAAS,EAAiB,GAGpB,IAFC,IAAA,EAAgB,SAAS,cAAc,4BAEpC,EAAI,EAAK,EAAI,EAAG,IAAK,CACzB,IAAA,EAAO,SAAS,cAAc,OAClC,EAAK,UAAU,IAAI,QACnB,EAAK,aAAa,YAAa,EAAE,YACjC,EAAK,GAAK,QAAQ,EAClB,EAAc,YAAY,GAC1B,EAAS,OAAO,GAAG,KAAK,IAI1B,SAAS,EAAU,GAClB,IACA,IACA,EAAiB,GAGlB,SAAS,IACR,IAGD","file":"js.fdde0ab9.map","sourceRoot":"../pug","sourcesContent":["let gameData = <any>{\n\tselected: false,\n\ttowers: [[], [], []],\n\tactiveIndex: null,\n\tmoves: 0\n}\n\nfunction setupClickHandlers() {\n\tlet towers = document.querySelectorAll(\".tower\")\n\n\ttowers.forEach(tower => {\n\t\ttower.addEventListener(\"click\", handleClick)\n\t})\n\n\tlet startButton = document.getElementById(\"start-button\")\n\n\tstartButton.addEventListener(\"click\", (e: MouseEvent) => {\n\t\te.preventDefault()\n\n\t\tconst input = (<HTMLInputElement>document.getElementById(\"disc-count\"))\n\t\t\t.value\n\t\tconst discCount = parseInt(input, 10)\n\n\t\tif (discCount >= 3 && discCount <= 6) {\n\t\t\tgameData.discCount = discCount\n\t\t\tstartGame(discCount)\n\t\t}\n\t})\n}\n\nfunction validateMove(from: Array<HTMLElement>, to: Array<any>) {\n\tlet fromDisc = from[0]\n\n\tif (to.length > 0) {\n\t\t// validate size of discs\n\t\tif (to[0].dataset.size < fromDisc.dataset.size) {\n\t\t\treturn true\n\t\t} else {\n\t\t\t// no move allowed\n\t\t\treturn false\n\t\t}\n\t} else {\n\t\t// just move\n\t\treturn true\n\t}\n}\n\nfunction _deactivateTower() {\n\tconst activeTower = document.querySelector(\n\t\t`[data-index=\"${gameData.activeIndex}\"]`\n\t)\n\tactiveTower.classList.remove(\"active\")\n\tgameData.activeIndex = null\n}\n\nfunction _activateTower(index) {\n\tconst activeTower = document.querySelector(`[data-index=\"${index}\"]`)\n\tactiveTower.classList.add(\"active\")\n\tgameData.activeIndex = index\n}\n\nfunction handleClick(e: any) {\n\t// get current tower index\n\tlet currentIndex = e.currentTarget.dataset.index\n\n\t// if same index, deactivate\n\tif (gameData.activeIndex === currentIndex) {\n\t\t_deactivateTower()\n\t\treturn\n\t}\n\n\t// if null index, make current click\n\telse if (gameData.activeIndex === null) {\n\t\tgameData.activeIndex = currentIndex\n\t\t_activateTower(currentIndex)\n\t}\n\n\t// if active && different index, make move\n\telse {\n\t\tlet from = gameData.towers[gameData.activeIndex]\n\t\tlet to = gameData.towers[currentIndex]\n\n\t\t// validate sizes\n\t\tif (validateMove(from, to)) {\n\t\t\t// perform actual move in arrays\n\t\t\tlet disc = from.shift()\n\t\t\tgameData.towers[currentIndex].unshift(disc)\n\t\t\t_deactivateTower()\n\n\t\t\tgameData.moves += 1\n\t\t\t// trigger refresh dom\n\t\t\tsyncDiscsToDom()\n\t\t} else {\n\t\t\t_deactivateTower()\n\t\t}\n\t}\n\n\tif (validateWin()) {\n\t\tshowWinCondition()\n\t}\n}\n\n\nfunction showWinCondition() {\n\tlet winContainer = document.querySelector('.win-container')\n\tlet moves = document.getElementById('move-count')\n\n\twinContainer.classList.remove('hidden')\n\tmoves.innerHTML = gameData.moves\n}\n\nfunction showGame() {\n\tlet towerContainer = <HTMLElement>document.querySelector(\".tower-container\")\n\ttowerContainer.style.display = \"flex\"\n}\n\nfunction validateWin() {\n\tlet t3 = gameData.towers[2]\n\n\tif (t3.length > 0 && t3.length === gameData.discCount) {\n\t\treturn true\n\t}\n}\n\nfunction syncDiscsToDom() {\n\tlet towers = document.querySelectorAll(\".tower\")\n\n\tgameData.towers.forEach((discStack, si) => {\n\t\tlet discContainer = towers[si].querySelector(\".disc-container\")\n\t\tdiscContainer.innerHTML = \"\"\n\t\tdiscStack.forEach((s, i) => {\n\t\t\tdiscContainer.appendChild(s)\n\t\t})\n\t})\n}\n\nfunction hideIntro() {\n\tlet start = document.querySelector(\".start-form\")\n\tstart.classList.add(\"hidden\")\n}\n\nfunction makeInitialDiscs(qty: number) {\n\tconst discContainer = document.querySelector(\"#tower-1 .disc-container\")\n\n\tfor (let i = qty; i > 0; i--) {\n\t\tlet disc = document.createElement(\"div\")\n\t\tdisc.classList.add(\"disc\")\n\t\tdisc.setAttribute(\"data-size\", i.toString())\n\t\tdisc.id = `disc-${i}`\n\t\tdiscContainer.appendChild(disc)\n\t\tgameData.towers[0].push(disc)\n\t}\n}\n\nfunction startGame(discCount: number) {\n\tshowGame()\n\thideIntro()\n\tmakeInitialDiscs(discCount)\n}\n\nfunction init() {\n\tsetupClickHandlers()\n}\n\ninit()\n"]}